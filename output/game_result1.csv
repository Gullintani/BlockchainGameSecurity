Crypto Barons,0x943108bcdd1A2d5BaD75b31D0B421b8170fd1192,3900,Exception State,Low,_function_0x41c577c6,3900,110,885,790,"{
    ""1"": {
        ""calldata"": ""0x41c577c681"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Barons,0x5ce82786D2e00748073f396A941D3E55C0A1B3D2,,,,,,,,,,
Crypto Battlegrounds,0x9DDa40DAbd849bBB087dcBcF0C5223ec5fFa0Ad7,818,Integer Overflow,High,deposit(),818,101,843,558,"{
    ""1"": {
        ""calldata"": ""0x01010101"",
        ""call_value"": ""0x1"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""5"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Battlegrounds,0x9DDa40DAbd849bBB087dcBcF0C5223ec5fFa0Ad7,1703,Exception State,Low,getServer(uint256),1703,110,765,670,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x546b270d40"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Colors,0x94cac9b8a8e597e5a934b91c0e5a06fe863bde13,,,,,,,,,,
Crypto Cup,0x7deabd3ef57fbbc50efbabe406709923b61c7122,,,,,,,,,,
Crypto Cup,0xFEF1595DA2BBa952FE13003dcE7Ad32d991c6e2F,1055,Integer Overflow,High,name(),1055,101,1627,497,"{
    ""1"": {
        ""calldata"": ""0x06fdde03c0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Cup,0xFEF1595DA2BBa952FE13003dcE7Ad32d991c6e2F,2986,Exception State,Low,getTeam(uint256),2986,110,733,638,"{
    ""1"": {
        ""calldata"": ""0x008e0f1b03"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Cup,0xFEF1595DA2BBa952FE13003dcE7Ad32d991c6e2F,4879,Exception State,Low,buyTeam(uint256),4879,110,2718,1913,"{
    ""1"": {
        ""calldata"": ""0x0feb172f0080"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Family,0x4bd6b9807227ab4b96d733b0f6b3fee30d0cfdeb,,,,,,,,,,
Crypto Family,0x10d359fCcc99bd228823a4294330F9a3B2B76ff3,,,,,,,,,,
Crypto Lambos,0xe824055fefA7bEB658A8656D32cA48D658Cd6D3B,2444,Exception State,Low,_function_0x4c410b49,2444,110,748,653,"{
    ""1"": {
        ""calldata"": ""0x4c410b4980"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Lambos,0xe824055fefA7bEB658A8656D32cA48D658Cd6D3B,3499,Exception State,Low,"buy(uint256,string,string)",3499,110,7215,1616,"{
    ""1"": {
        ""calldata"": ""0xe1b5ce0f80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Lambos,0xe824055fefA7bEB658A8656D32cA48D658Cd6D3B,2444,Exception State,Low,_function_0x4c410b49,2444,110,748,653,"{
    ""1"": {
        ""calldata"": ""0x4c410b4980"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Lambos,0xe824055fefA7bEB658A8656D32cA48D658Cd6D3B,3499,Exception State,Low,"buy(uint256,string,string)",3499,110,7215,1616,"{
    ""1"": {
        ""calldata"": ""0xe1b5ce0f80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Mayor,0xDAE049562763D6A4236AF188a05f4f29603b41Cc,,,,,,,,,,
Crypto Mayor,0xDAE049562763D6A4236AF188a05f4f29603b41Cc,,,,,,,,,,
Crypto Memes,0x0d623823d2aa4540f335bb926447dc582dc5bd64,3953,Exception State,Low,getMeme(uint256),3953,110,1262,884,"{
    ""1"": {
        ""calldata"": ""0x3dea6b9a81"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Memes,0x0d623823d2aa4540f335bb926447dc582dc5bd64,3953,Exception State,Low,getMeme(uint256),3953,110,1262,884,"{
    ""1"": {
        ""calldata"": ""0x3dea6b9a81"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Poop Game,0xF856A08F1F6F53b21BBe6abcE5c15317ce9B8811,2511,Exception State,Low,getGirl(uint256),2511,110,1042,664,"{
    ""1"": {
        ""calldata"": ""0x054a8c0201"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Poop Game,0xF856A08F1F6F53b21BBe6abcE5c15317ce9B8811,2511,Exception State,Low,getGirl(uint256),2511,110,1042,664,"{
    ""1"": {
        ""calldata"": ""0x054a8c0201"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sim,0xe0c0F5CE4e746eAA048Ae5db5c61B6b1eF3B56ed,4814,Integer Overflow,High,"calculateTrade(uint256,uint256,uint256)",4814,101,891,796,"{
    ""1"": {
        ""calldata"": ""0x229824c40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Sim,0xe0c0F5CE4e746eAA048Ae5db5c61B6b1eF3B56ed,4837,Exception State,Low,devFee(uint256),4837,110,607,512,"{
    ""1"": {
        ""calldata"": ""0x23b3c771"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x3bc0461a40"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sim,0xe0c0F5CE4e746eAA048Ae5db5c61B6b1eF3B56ed,4919,Exception State,Low,sellEggs(),4919,110,3037,2232,"{
    ""1"": {
        ""calldata"": ""0x23b3c771"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x3955f0fe"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,589,Integer Overflow,High,fallback,589,101,562,467,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0xfffffffffffffffffffffffffffffffffffffffffffffffffeb61053f7f4a8f4"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,7163,Exception State,Low,_function_0x40851210,7163,110,965,870,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x4085121001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,8103,External Call To Fixed Address,Low,buySprite(uint256),8103,107,5211,3322,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x51c54c68"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,9205,Exception State,Low,allPurchasedSprites(uint256),9205,110,1009,914,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x53eeb43001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,589,Integer Overflow,High,fallback,589,101,562,467,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0xfffffffffffffffffffffffffffffffffffffffffffffffffeb61053f7f4a8f4"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,7163,Exception State,Low,_function_0x40851210,7163,110,965,870,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x4085121001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,8103,External Call To Fixed Address,Low,buySprite(uint256),8103,107,5211,3322,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x51c54c68"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
Crypto Sprites,0xf3C8Ed6C721774C022c530E813a369dFe78a6E85,9205,Exception State,Low,allPurchasedSprites(uint256),9205,110,1009,914,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x53eeb43001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Strippers,0x6ded330704d6b4734de6dc82b609765006dde197,4663,Integer Overflow,High,calculateCoinSell(uint256),4663,101,1735,1640,"{
    ""1"": {
        ""calldata"": ""0x1c3de07a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
Crypto Strippers,0x6ded330704d6b4734de6dc82b609765006dde197,4686,Exception State,Low,devFee(uint256),4686,110,607,512,"{
    ""1"": {
        ""calldata"": ""0x020bdf54"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x3bc0461a40"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Takeovers,0x5a95d990d7c3bd406781c3888c953c13971326ad,4806,Exception State,Low,_function_0x092d0afc,4806,110,697,602,"{
    ""1"": {
        ""calldata"": ""0x092d0afc40"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
Crypto Waifus,0x22c294bbf61c3c60a5271d245ac8c620c438e0e4,,,,,,,,,,
Crypto Waifus,0x22c294bbf61c3c60a5271d245ac8c620c438e0e4,,,,,,,,,,
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1023,Integer Overflow,High,getElementOwners(uint256[]),1023,101,1237,576,"{
    ""1"": {
        ""calldata"": ""0x3a98c533ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1025,Integer Overflow,High,getElementOwners(uint256[]),1025,101,1237,576,"{
    ""1"": {
        ""calldata"": ""0x3a98c533fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1064,Integer Overflow,High,getElementOwners(uint256[]),1064,101,1857,727,"{
    ""1"": {
        ""calldata"": ""0x3a98c533"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1186,Integer Overflow,High,getElements(uint256[]),1186,101,1278,617,"{
    ""1"": {
        ""calldata"": ""0x630c010effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1188,Integer Overflow,High,getElements(uint256[]),1188,101,1278,617,"{
    ""1"": {
        ""calldata"": ""0x630c010efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3442,Exception State,Low,getElement(uint256),3442,110,896,801,"{
    ""1"": {
        ""calldata"": ""0x3a7d22bc02"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3494,Integer Overflow,High,getElementOwners(uint256[]),3494,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c53380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3497,Integer Overflow,High,getElementOwners(uint256[]),3497,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c53380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3499,Integer Overflow,High,getElementOwners(uint256[]),3499,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c533"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,7236,Integer Overflow,High,getElements(uint256[]),7236,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x630c010e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0xdcbf1d4067e5724e7b6fcba5dcd49c78b90ff97b,,,,,,,,,,
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1023,Integer Overflow,High,getElementOwners(uint256[]),1023,101,1237,576,"{
    ""1"": {
        ""calldata"": ""0x3a98c533ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1025,Integer Overflow,High,getElementOwners(uint256[]),1025,101,1237,576,"{
    ""1"": {
        ""calldata"": ""0x3a98c533fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1064,Integer Overflow,High,getElementOwners(uint256[]),1064,101,1857,727,"{
    ""1"": {
        ""calldata"": ""0x3a98c533"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1186,Integer Overflow,High,getElements(uint256[]),1186,101,1278,617,"{
    ""1"": {
        ""calldata"": ""0x630c010effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,1188,Integer Overflow,High,getElements(uint256[]),1188,101,1278,617,"{
    ""1"": {
        ""calldata"": ""0x630c010efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3442,Exception State,Low,getElement(uint256),3442,110,896,801,"{
    ""1"": {
        ""calldata"": ""0x3a7d22bc02"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3494,Integer Overflow,High,getElementOwners(uint256[]),3494,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c53380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3497,Integer Overflow,High,getElementOwners(uint256[]),3497,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c53380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,3499,Integer Overflow,High,getElementOwners(uint256[]),3499,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x3a98c533"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0x548d32216d01617452892ea360bfce9ce8dc9729,7236,Integer Overflow,High,getElements(uint256[]),7236,101,1005,534,"{
    ""1"": {
        ""calldata"": ""0x630c010e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAlchemy,0xdcbf1d4067e5724e7b6fcba5dcd49c78b90ff97b,,,,,,,,,,
CryptoArte,0xbace7e22f06554339911a03b8e0ae28203da9598,1640,Integer Overflow,High,fallback,1640,101,1078,700,"{
    ""1"": {
        ""calldata"": ""0x06fdde03"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoArte,0xbace7e22f06554339911a03b8e0ae28203da9598,2789,Integer Overflow,High,"[link_classic_internal(uint64,int64), symbol()] (ambiguous)",2789,101,1424,1046,"{
    ""1"": {
        ""calldata"": ""0x95d89b41"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoArte,0x3f18b2e57acd6f6c111936577529ac0dce7148b8,1445,External Call To Fixed Address,Low,purchaseToken(uint256),1445,107,3661,2530,"{
    ""1"": {
        ""calldata"": ""0xc2db2c42"",
        ""call_value"": ""0xd529ae9e860000"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAssault,0x31AF195dB332bc9203d758C74dF5A5C5e597cDb7,2085,Integer Overflow,High,name(),2085,101,1094,716,"{
    ""1"": {
        ""calldata"": ""0x06fdde03"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoAssault,0x75D745EAeA0Ab0A8C9542959311C1C3166F6567D,,,,,,,,,,
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,353,Multiple Calls in a Single Transaction,Medium,evolveByAtom(uint256),353,113,152411,10801,,"Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1728
Offset: 1993
Offset: 2429
Offset: 2615
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.
"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,1728,External Call To Fixed Address,Low,evolveByAtom(uint256),1728,107,3089,1958,"{
    ""1"": {
        ""calldata"": ""0x0e47c259"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,1807,Use of tx.origin,Medium,evolveByAtom(uint256),1807,111,38091,2774,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,1993,External Call To Fixed Address,Low,evolveByAtom(uint256),1993,107,40105,4082,"{
    ""1"": {
        ""calldata"": ""0x0e47c259"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,2429,External Call To Fixed Address,Low,evolveByAtom(uint256),2429,107,79353,7176,"{
    ""1"": {
        ""calldata"": ""0x0e47c259"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,2615,External Call To Fixed Address,Low,evolveByAtom(uint256),2615,107,116191,9213,"{
    ""1"": {
        ""calldata"": ""0x0e47c259"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,2670,Use of tx.origin,Medium,evolveByAtom(uint256),2670,111,150925,9947,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,2902,Use of tx.origin,Medium,receiveBonus(),2902,111,2668,1583,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,3031,External Call To Fixed Address,Low,receiveBonus(),3031,107,3875,2414,"{
    ""1"": {
        ""calldata"": ""0x30507451"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,3842,External Call To Fixed Address,Low,"rentByAtom(uint256,uint256)",3842,107,3187,2056,"{
    ""1"": {
        ""calldata"": ""0x3154d79002"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,3921,Use of tx.origin,Medium,"rentByAtom(uint256,uint256)",3921,111,38189,2872,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,4112,External Call To Fixed Address,Low,"rentByAtom(uint256,uint256)",4112,107,40212,4189,"{
    ""1"": {
        ""calldata"": ""0x3154d79002"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,6147,External Call To Fixed Address,Low,setFee(uint128),6147,107,2220,1514,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,6392,External Call To Fixed Address,Low,setFee(uint128),6392,107,39102,3599,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,6638,External Call To Fixed Address,Low,setFee(uint128),6638,107,75985,5685,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,7000,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",7000,107,3214,2083,"{
    ""1"": {
        ""calldata"": ""0x39e65b46"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,7079,Use of tx.origin,Medium,"setIsRentByAtom(uint256,uint128)",7079,111,38216,2899,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,7269,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",7269,107,40239,4216,"{
    ""1"": {
        ""calldata"": ""0x39e65b46"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,7663,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",7663,107,78505,6753,"{
    ""1"": {
        ""calldata"": ""0x39e65b46"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,8459,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8459,107,3247,2116,"{
    ""1"": {
        ""calldata"": ""0x415c759302"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,8538,Use of tx.origin,Medium,"autoRentByAtom(uint256,uint256)",8538,111,38249,2932,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,8729,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8729,107,40278,4255,"{
    ""1"": {
        ""calldata"": ""0x415c759302"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,8808,Use of tx.origin,Medium,"autoRentByAtom(uint256,uint256)",8808,111,75280,5071,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,8997,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8997,107,77300,6385,"{
    ""1"": {
        ""calldata"": ""0x415c759302"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,10288,External Call To Fixed Address,Low,kill(),10288,107,2224,1518,"{
    ""1"": {
        ""calldata"": ""0x41c0e1b5"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,10614,External Call To Fixed Address,Low,"setIsBuyByAtom(uint256,uint128)",10614,107,3280,2149,"{
    ""1"": {
        ""calldata"": ""0x42bd0959"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,10693,Use of tx.origin,Medium,"setIsBuyByAtom(uint256,uint128)",10693,111,38282,2965,,"Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin"
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,10883,External Call To Fixed Address,Low,"setIsBuyByAtom(uint256,uint128)",10883,107,40305,4282,"{
    ""1"": {
        ""calldata"": ""0x42bd0959"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,11644,External Call To Fixed Address,Low,_function_0x4afe2f80,11644,107,2352,1646,"{
    ""1"": {
        ""calldata"": ""0x4afe2f80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,11889,External Call To Fixed Address,Low,_function_0x4afe2f80,11889,107,39234,3731,"{
    ""1"": {
        ""calldata"": ""0x4afe2f80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,12510,External Call To Fixed Address,Low,setLevelup(uint8[4]),12510,107,2434,1728,"{
    ""1"": {
        ""calldata"": ""0xb79ec028"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x0b7bda8ad804cb3318ae8490b984c2883ada2154,13324,External Call To Fixed Address,Low,unsetIsBuyByAtom(uint256),13324,107,3401,2270,"{
    ""1"": {
        ""calldata"": ""0xbee4bbeb"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,359,Multiple Calls in a Single Transaction,Medium,"approve(address,uint256)",359,113,142844,14514,,"Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 2250
Offset: 2397
Offset: 2626
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.
"
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,2250,External Call To Fixed Address,Low,"approve(address,uint256)",2250,107,3291,1500,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x095ea7b3"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,2397,External Call To Fixed Address,Low,"approve(address,uint256)",2397,107,40960,3617,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x095ea7b3"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,2626,External Call To Fixed Address,Low,"approve(address,uint256)",2626,107,105269,11804,"{
    ""1"": {
        ""calldata"": ""0x095ea7b300bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe0100bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x095ea7b3"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,2906,External Call To Fixed Address,Low,tokenByIndex(uint256),2906,107,2725,1689,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x4f6ccce7"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,3036,External Call To Fixed Address,Low,"[gasprice_bit_ether(int128), transferFrom(address,address,uint256)] (ambiguous)",3036,107,3394,1603,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x23b872dd"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,3183,External Call To Fixed Address,Low,"[gasprice_bit_ether(int128), transferFrom(address,address,uint256)] (ambiguous)",3183,107,41063,3720,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x23b872dd"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,3400,External Call To Fixed Address,Low,"[gasprice_bit_ether(int128), transferFrom(address,address,uint256)] (ambiguous)",3400,107,79688,6413,"{
    ""1"": {
        ""calldata"": ""0x095ea7b300bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe0100bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x23b872dd"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,3736,External Call To Fixed Address,Low,"tokenOfOwnerByIndex(address,uint256)",3736,107,3123,1662,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x2f745c59"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,3883,External Call To Fixed Address,Low,"tokenOfOwnerByIndex(address,uint256)",3883,107,41008,3760,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x2f745c59"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,4384,External Call To Fixed Address,Low,kill(),4384,107,3693,1667,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x41c0e1b5"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,4532,External Call To Fixed Address,Low,"safeTransferFrom(address,address,uint256)",4532,107,3504,1713,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x42842e0e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,4679,External Call To Fixed Address,Low,"safeTransferFrom(address,address,uint256)",4679,107,41173,3830,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x42842e0e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,5412,External Call To Fixed Address,Low,_function_0x54cc702d,5412,107,4132,1776,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x54cc702d"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,5894,External Call To Fixed Address,Low,withdrawBalance(),5894,107,3757,1731,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x5fd8c710"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0xbdaed67214641b7eda3bf8d7431c3ae5fc46f466,6515,External Call To Fixed Address,Low,ownerOf(uint256),6515,107,3237,1776,"{
    ""1"": {
        ""calldata"": ""0x095ea7b301bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe01bebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x6352211e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,331,Multiple Calls in a Single Transaction,Medium,evolveByAtom(uint256),331,113,152411,10801,,"Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 1609
Offset: 1874
Offset: 2310
Offset: 2496
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.
"
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,1609,External Call To Fixed Address,Low,evolveByAtom(uint256),1609,107,3089,1958,"{
    ""1"": {
        ""calldata"": ""0x0e47c259"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,1874,External Call To Fixed Address,Low,evolveByAtom(uint256),1874,107,40105,4082,"{
    ""1"": {
        ""calldata"": ""0x0e47c259bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,2310,External Call To Fixed Address,Low,evolveByAtom(uint256),2310,107,79353,7176,"{
    ""1"": {
        ""calldata"": ""0x0e47c259bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,2496,External Call To Fixed Address,Low,evolveByAtom(uint256),2496,107,116191,9213,"{
    ""1"": {
        ""calldata"": ""0x0e47c259bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,2912,External Call To Fixed Address,Low,receiveBonus(),2912,107,3875,2414,"{
    ""1"": {
        ""calldata"": ""0x30507451"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,3723,External Call To Fixed Address,Low,"rentByAtom(uint256,uint256)",3723,107,3187,2056,"{
    ""1"": {
        ""calldata"": ""0x3154d79002"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,3993,External Call To Fixed Address,Low,"rentByAtom(uint256,uint256)",3993,107,40212,4189,"{
    ""1"": {
        ""calldata"": ""0x3154d79002020202020202020101010101010101010101010101010101010101028001020101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,6028,External Call To Fixed Address,Low,setFee(uint128),6028,107,2220,1514,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,6273,External Call To Fixed Address,Low,setFee(uint128),6273,107,39102,3599,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,6519,External Call To Fixed Address,Low,setFee(uint128),6519,107,75985,5685,"{
    ""1"": {
        ""calldata"": ""0x3687f24a"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,6881,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",6881,107,3214,2083,"{
    ""1"": {
        ""calldata"": ""0x39e65b46"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,7150,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",7150,107,40239,4216,"{
    ""1"": {
        ""calldata"": ""0x39e65b46bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,7544,External Call To Fixed Address,Low,"setIsRentByAtom(uint256,uint128)",7544,107,78505,6753,"{
    ""1"": {
        ""calldata"": ""0x39e65b46bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,8340,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8340,107,3247,2116,"{
    ""1"": {
        ""calldata"": ""0x415c759302"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,8610,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8610,107,40278,4255,"{
    ""1"": {
        ""calldata"": ""0x415c75930202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,8878,External Call To Fixed Address,Low,"autoRentByAtom(uint256,uint256)",8878,107,77300,6385,"{
    ""1"": {
        ""calldata"": ""0x415c75930202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef028000020101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,10169,External Call To Fixed Address,Low,kill(),10169,107,2224,1518,"{
    ""1"": {
        ""calldata"": ""0x41c0e1b5"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,10495,External Call To Fixed Address,Low,"setIsBuyByAtom(uint256,uint128)",10495,107,3280,2149,"{
    ""1"": {
        ""calldata"": ""0x42bd0959"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,10764,External Call To Fixed Address,Low,"setIsBuyByAtom(uint256,uint128)",10764,107,40305,4282,"{
    ""1"": {
        ""calldata"": ""0x42bd0959bebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,11600,External Call To Fixed Address,Low,setLevelup(uint8[4]),11600,107,2390,1684,"{
    ""1"": {
        ""calldata"": ""0xb79ec028"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,11845,External Call To Fixed Address,Low,setLevelup(uint8[4]),11845,107,39272,3769,"{
    ""1"": {
        ""calldata"": ""0xb79ec028"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,12414,External Call To Fixed Address,Low,unsetIsBuyByAtom(uint256),12414,107,3357,2226,"{
    ""1"": {
        ""calldata"": ""0xbee4bbeb"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,13534,External Call To Fixed Address,Low,setGiftMode(bool),13534,107,2462,1756,"{
    ""1"": {
        ""calldata"": ""0xd12892e4"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoAtoms,0x5314dD28dE3F215647B64CcB3701E6098A80d080,14182,Exception State,Low,_function_0xe47ca0cc,14182,110,661,566,"{
    ""1"": {
        ""calldata"": ""0xe47ca0cc01"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoAtoms,0x9b3554E6FC4F81531F6D43b611258bd1058ef6D5,,,,,,,,,,
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,1604,Integer Overflow,High,_function_0x42d6bb61,1604,101,592,497,"{
    ""1"": {
        ""calldata"": ""0x42d6bb61fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5501,External Call To Fixed Address,Low,totalSupply(),5501,107,2183,1477,"{
    ""1"": {
        ""calldata"": ""0x18160ddd"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5753,External Call To Fixed Address,Low,getProperties(uint256),5753,107,2409,1608,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5790,Integer Overflow,High,getProperties(uint256),5790,101,37397,2408,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5793,Integer Overflow,High,getProperties(uint256),5793,101,37703,2528,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5814,Integer Overflow,High,getProperties(uint256),5814,101,37703,2528,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5875,Integer Overflow,High,getProperties(uint256),5875,101,37854,2586,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,5877,Integer Overflow,High,getProperties(uint256),5877,101,37854,2586,"{
    ""1"": {
        ""calldata"": ""0x1b8ca217"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBeasties,0xffdf17652cca46eb98a214cb3e413c8661241e49,6649,Exception State,Low,_function_0x42d6bb61,6649,110,602,507,"{
    ""1"": {
        ""calldata"": ""0x42d6bb61"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0x95af0462af5100f02747aae56222deac537a4d0a,5265,Exception State,Low,_function_0x396f2bbe,5265,110,1257,502,"{
    ""1"": {
        ""calldata"": ""0x396f2bbe"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0x95af0462af5100f02747aae56222deac537a4d0a,7510,External Call To Fixed Address,Low,_function_0x468aa2fa,7510,107,3057,1971,"{
    ""1"": {
        ""calldata"": ""0x468aa2fa"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoBots,0xf7a6e15dfd5cdd9ef12711bd757a9b6021abf643,6140,Exception State,Low,isPregnant(uint256),6140,110,938,843,"{
    ""1"": {
        ""calldata"": ""0x1940a93681"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,1276,Integer Overflow,High,_function_0x28a3718c,1276,101,3191,1258,"{
    ""1"": {
        ""calldata"": ""0x28a3718c"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,1896,Integer Overflow,High,_function_0x4c8aa974,1896,101,671,576,"{
    ""1"": {
        ""calldata"": ""0x4c8aa974fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,5308,External Call To Fixed Address,Low,_function_0x0bc8febb,5308,107,4018,2079,"{
    ""1"": {
        ""calldata"": ""0x0bc8febb"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,5762,Exception State,Low,_function_0x21b52519,5762,110,843,748,"{
    ""1"": {
        ""calldata"": ""0x21b5251921"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,5853,Exception State,Low,getCurrentPrice(uint32),5853,110,4036,2901,"{
    ""1"": {
        ""calldata"": ""0x3ea0fb3e"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,5940,Integer Underflow,High,_function_0x21b52519,5940,101,2544,1834,"{
    ""1"": {
        ""calldata"": ""0x21b5251900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary subtraction can underflow.
The operands of the subtraction operation are not sufficiently constrained. The subtraction could therefore result in an integer underflow. Prevent the underflow by checking inputs or ensure sure that the underflow is caught by an assertion."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,7436,Exception State,Low,_function_0x33cb2609,7436,110,901,806,"{
    ""1"": {
        ""calldata"": ""0x33cb26090000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,7709,Exception State,Low,_function_0x3c2f2695,7709,110,1215,930,"{
    ""1"": {
        ""calldata"": ""0x3c2f2695"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0xbe4dca67d318f572869ed8845fe1d3869f98ed43,7806,Exception State,Low,getCurrentPrice(uint32),7806,110,945,850,"{
    ""1"": {
        ""calldata"": ""0x3ea0fb3e0000000000000000000000000000000000000000000000000000000005"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots,0x79a198b2355ca2aef695d8a4987582e093911ebb,,,,,,,,,,
CryptoBots,0x491c05896ef656d7fee0fb90ce487315ff0ac14c,2005,Exception State,Low,lastGen0SalePrices(uint256),2005,110,348,253,"{
    ""1"": {
        ""calldata"": ""0x484eccb401"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots: Idle,0x5271e16a1e2c237fbb99bc5dceae452d1c5a64cd,,,,,,,,,,
CryptoBots: Idle,0x2073ea9e55695a2c528b035813ca113540545184,1623,Exception State,Low,_function_0x131d9a27,1623,110,3928,2369,"{
    ""1"": {
        ""calldata"": ""0x131d9a27"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots: Idle,0x2073ea9e55695a2c528b035813ca113540545184,2056,Exception State,Low,"bid(uint256,uint256)",2056,110,1628,870,"{
    ""1"": {
        ""calldata"": ""0x598647f840"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots: Idle,0xb33f17e0e3a339a769ec54e5a1104a3d51551de0,533,Integer Overflow,High,_function_0x738c20ca,533,101,4266,1111,"{
    ""1"": {
        ""calldata"": ""0x738c20cafffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xb33f17e0e3a339a769ec54e5a1104a3d51551de0,5899,Integer Overflow,High,_function_0x738c20ca,5899,101,4314,1159,"{
    ""1"": {
        ""calldata"": ""0x738c20ca0000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000162"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xb33f17e0e3a339a769ec54e5a1104a3d51551de0,5947,Exception State,Low,_function_0xada1ddca,5947,110,1512,1037,"{
    ""1"": {
        ""calldata"": ""0x738c20ca"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0xada1ddca0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots: Idle,0xf7f018de6efa79b04f04458412a09eecd43fdccb,,,,,,,,,,
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,834,Integer Overflow,High,"batchTransfer(address[],uint256)",834,101,4408,1113,"{
    ""1"": {
        ""calldata"": ""0x83f12fecfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,838,Integer Overflow,High,"batchTransfer(address[],uint256)",838,101,4408,1113,"{
    ""1"": {
        ""calldata"": ""0x83f12fec80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,863,Integer Overflow,High,"batchTransfer(address[],uint256)",863,101,4475,1180,"{
    ""1"": {
        ""calldata"": ""0x83f12fecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,1069,Integer Overflow,High,fallback,1069,101,1063,685,"{
    ""1"": {
        ""calldata"": ""0x06fdde03"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,2327,Integer Overflow,High,"[link_classic_internal(uint64,int64), symbol()] (ambiguous)",2327,101,1359,981,"{
    ""1"": {
        ""calldata"": ""0x95d89b41"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,2706,Integer Overflow,High,"[gasprice_bit_ether(int128), transferFrom(address,address,uint256)] (ambiguous)",2706,101,1729,784,"{
    ""1"": {
        ""calldata"": ""0x095ea7b30000000000000000000000000000000000000000000000000000000000000000e9"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0x23b872dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,2738,Exception State,Low,"[many_msg_babbage(bytes1), transfer(address,uint256)] (ambiguous)",2738,110,1978,1033,"{
    ""1"": {
        ""calldata"": ""0x23b872ddededededededededededededededededededededededededededededededededededededededededededededb7b35355856492933c9a9fcec2a1ed9c13540e4b"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0xa9059cbb000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoBots: Idle,0xd6077754a0b57ab780e5be4c795f5ac9e08c0d6e,2768,Integer Overflow,High,"batchTransfer(address[],uint256)",2768,101,4475,1180,"{
    ""1"": {
        ""calldata"": ""0x83f12fec800000000000000000000200000000000000000000000000000000000000000184"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCanvas,0xe06ac2eba65F7184aAE3cA2A0Cb1cFdC604B765f,,,,,,,,,,
CryptoCare,0xDe870FD5DcAbc964C0c56DBf80Ccb1cCed5ad208,2205,External Call To Fixed Address,Low,"tokenOfOwnerByIndex(address,uint256)",2205,107,2449,1553,"{
    ""1"": {
        ""calldata"": ""0x2f745c59"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoCare,0xe7049a081f67f1ff4bdbdbf4c48c547d24c48f41,,,,,,,,,,
CryptoChars,0x7EDA2301cb535e2EA8ea06237f6443b6268e2b2A,2139,Exception State,Low,getChar(uint256),2139,110,778,683,"{
    ""1"": {
        ""calldata"": ""0x0ff88a8d04"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoChars,0x7EDA2301cb535e2EA8ea06237f6443b6268e2b2A,2173,Integer Overflow,High,getChar(uint256),2173,101,1786,1313,"{
    ""1"": {
        ""calldata"": ""0x0ff88a8d"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCities,0x2C063A26BAe823A7497Cb4bfD2b9dc5D4d124A16,3678,Integer Overflow,High,_function_0x857d7717,3678,101,960,865,"{
    ""1"": {
        ""calldata"": ""0x857d771700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0120cb1e0402818802036401529a885e84c10820d8a43502221031900b8010f8"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCities,0x2C063A26BAe823A7497Cb4bfD2b9dc5D4d124A16,3680,Integer Overflow,High,_function_0x857d7717,3680,101,960,865,"{
    ""1"": {
        ""calldata"": ""0x857d771700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009c3c8146247f20a412a2d0c78cedc274228c94898d118b5048c08f95020550082c00090004fd07803000338477a1100104038a022204301c04406448200b104280"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCities,0x74De47fEe8F94235c6E76E0ac425511bCd2eF83f,,,,,,,,,,
CryptoCities,0x134c5dE7D7580a2d4a9375d3f70bDCC7dee1E098,,,,,,,,,,
CryptoCities,0x116d4396de572cacdb230ca34cb8e8449f50dda3,117,Multiple Calls in a Single Transaction,Medium,_function_0x44da8716,117,113,77929,4760,,"Multiple sends are executed in one transaction.
Consecutive calls are executed at the following bytecode offsets:
Offset: 721
Offset: 972
Try to isolate each external call into its own transaction, as external calls can fail accidentally or deliberately.
"
CryptoCities,0x116d4396de572cacdb230ca34cb8e8449f50dda3,721,External Call To Fixed Address,Low,_function_0x44da8716,721,107,3898,1589,"{
    ""1"": {
        ""calldata"": ""0x44da871600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoCities,0x116d4396de572cacdb230ca34cb8e8449f50dda3,972,External Call To Fixed Address,Low,_function_0x44da8716,972,107,43094,3925,"{
    ""1"": {
        ""calldata"": ""0x44da871600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoCities,0xd137ed189a8a3e9bf5541431c9b9ff1d4eb5c196,,,,,,,,,,
CryptoCities,0x53a66c4d213a088eb1d83bcf063e02205aa5215a,1331,External Call To Fixed Address,Low,_function_0x322c3215,1331,107,4024,2045,"{
    ""1"": {
        ""calldata"": ""0x322c321500000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoCities,0x53a66c4d213a088eb1d83bcf063e02205aa5215a,2741,External Call To Fixed Address,Low,_function_0xb3091c9b,2741,107,3699,2050,"{
    ""1"": {
        ""calldata"": ""0xb3091c9b"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
CryptoCocktailBar,0xFc9350C3487bACFCEF104c024Cc98cb0b2ADBDd0,,,,,,,,,,
CryptoCocktailBar,0xFc9350C3487bACFCEF104c024Cc98cb0b2ADBDd0,,,,,,,,,,
CryptoCountries,0xa4bec96265c7b58486acd15de27a53e2a45b30a2,597,Integer Overflow,High,"itemsForSaleLimit(uint256,uint256)",597,101,2031,618,"{
    ""1"": {
        ""calldata"": ""0x5435bac8"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0xa4bec96265c7b58486acd15de27a53e2a45b30a2,618,Integer Overflow,High,"itemsForSaleLimit(uint256,uint256)",618,101,2541,752,"{
    ""1"": {
        ""calldata"": ""0x5435bac8"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0xa4bec96265c7b58486acd15de27a53e2a45b30a2,634,Integer Overflow,High,"itemsForSaleLimit(uint256,uint256)",634,101,2541,752,"{
    ""1"": {
        ""calldata"": ""0x5435bac8"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0xa4bec96265c7b58486acd15de27a53e2a45b30a2,1335,Exception State,Low,"itemsForSaleLimit(uint256,uint256)",1335,110,1862,918,"{
    ""1"": {
        ""calldata"": ""0x5435bac8800000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoCountries,0xa4bec96265c7b58486acd15de27a53e2a45b30a2,1359,Exception State,Low,"itemsForSaleLimit(uint256,uint256)",1359,110,2539,1407,"{
    ""1"": {
        ""calldata"": ""0x5435bac8000000000000000000000000000000000000000000000000000000000000000001"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoCountries,0x92cb5f1fbabbcbdd891b9cbd8e9a056c8c1eebef,,,,,,,,,,
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,125,Integer Overflow,High,fallback,125,101,3078,303,"{
    ""1"": {
        ""calldata"": ""0x4ed3885effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,128,Integer Overflow,High,fallback,128,101,3078,303,"{
    ""1"": {
        ""calldata"": ""0x4ed3885efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,136,Integer Overflow,High,fallback,136,101,3078,303,"{
    ""1"": {
        ""calldata"": ""0x4ed3885e80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,142,Integer Overflow,High,fallback,142,101,11023,4746,"{
    ""1"": {
        ""calldata"": ""0x4ed3885e80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""3"": {
        ""calldata"": ""0x4ed3885e91"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,148,Integer Overflow,High,fallback,148,101,33095,7399,"{
    ""1"": {
        ""calldata"": ""0x4ed3885e80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,556,Integer Overflow,High,fallback,556,101,6626,1638,"{
    ""1"": {
        ""calldata"": ""0x4ed3885e80"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x1c61d42efafe3c627998f2d53d897dbfd99d7ff9,1235,Integer Overflow,High,fallback,1235,101,3627,478,"{
    ""1"": {
        ""calldata"": ""0x4ed3885e81"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCountries,0x3012d31fcc4b6a7fa03bb0af1fba9639f405edea,,,,,,,,,,
CryptoCovfefes,0x218d9C723464CD066345e004B282476a1995924B,3017,Exception State,Low,buyCovfefe(uint256),3017,110,1989,1374,"{
    ""1"": {
        ""calldata"": ""0x3eaa81280041"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking."
CryptoCrystal,0x5116c1d70e3a2cf55a2502d05f1bc17a0518782e,7580,Integer Overflow,High,"increaseApproval(address,uint256)",7580,101,1699,1224,"{
    ""1"": {
        ""calldata"": ""0x095ea7b30000000000000000000000000000000000000000000000000000000000000000cb"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    },
    ""2"": {
        ""calldata"": ""0xd73dd623000000000000000000000000000000000000000000000000000000000000000091"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoCrystal,0xcec76159cb10f8c110e738809e4ee4b71f1de12e,,,,,,,,,,
CryptoCrystal,0xb6e928db347dbaad2c06868b716a2cf488904574,,,,,,,,,,
CryptoCrystal,0x443e8c4cd680865246bc96bc2af936381dbae178,,,,,,,,,,
CryptoCrystal,0xcfbc9103362aec4ce3089f155c2da2eea1cb7602,,,,,,,,,,
CryptoCrystal,0x17f19e0571997aa11b2143b0fad77b70385b9af8,,,,,,,,,,
CryptoCultures,0x76825880Cb019Be4E9a0C0CEc2843760709b9Dc0,2344,Integer Overflow,High,fallback,2344,101,1421,713,"{
    ""1"": {
        ""calldata"": ""0x06fdde03"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoDogz,0x542fFFa898F4c18fF2A519604977D9B7A41Da0Be,590,Integer Overflow,High,name(),590,101,1787,469,"{
    ""1"": {
        ""calldata"": ""0x06fdde0380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoDogz,0x542fFFa898F4c18fF2A519604977D9B7A41Da0Be,594,Integer Overflow,High,name(),594,101,1787,469,"{
    ""1"": {
        ""calldata"": ""0x06fdde0380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoDogz,0x542fFFa898F4c18fF2A519604977D9B7A41Da0Be,612,Integer Overflow,High,name(),612,101,1583,453,"{
    ""1"": {
        ""calldata"": ""0x06fdde0380"",
        ""call_value"": ""0x0"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion."
CryptoDozer,0xa506758544a71943b5e8728d2DF8EC9E72473a9A,2011,External Call To Fixed Address,Low,fallback,2011,107,65292,9504,"{
    ""1"": {
        ""calldata"": ""0x"",
        ""call_value"": ""0x1"",
        ""caller"": ""0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef""
    }
}","The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully."
